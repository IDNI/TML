elem e0(elem::SYM, t_arith_op::NOP, dict.get_lexeme("eol"));
elem e1(char32_t(13));
elem e2(elem::ALT, t_arith_op::NOP, dict.get_lexeme("|"));
elem e3(char32_t(10));
elem e4(elem::SYM, t_arith_op::NOP, dict.get_lexeme("eof"));
production gp5{{e0, e1, e2, e3, e2, e4, }, {}, };
elem e6(elem::SYM, t_arith_op::NOP, dict.get_lexeme("ws_comment"));
elem e7(char32_t(35));
elem e8(elem::SYM, t_arith_op::NOP, dict.get_lexeme("printable_chars"));
production gp9{{e6, e7, e0, e2, e7, e8, e0, }, {}, };
elem e10(elem::SYM, t_arith_op::NOP, dict.get_lexeme("ws_required"));
elem e11(elem::SYM, t_arith_op::NOP, dict.get_lexeme("space"));
elem e12(elem::SYM, t_arith_op::NOP, dict.get_lexeme("ws"));
production gp13{{e10, e11, e12, e2, e6, e12, }, {}, };
elem e14(elem::SYM, t_arith_op::NOP, dict.get_lexeme("null"));
production gp15{{e12, e10, e2, e14, }, {}, };
elem e16(elem::SYM, t_arith_op::NOP, dict.get_lexeme("hex_digit"));
elem e17(elem::SYM, t_arith_op::NOP, dict.get_lexeme("digit"));
elem e18(char32_t(65));
elem e19(char32_t(66));
elem e20(char32_t(67));
elem e21(char32_t(68));
elem e22(char32_t(69));
elem e23(char32_t(70));
elem e24(char32_t(97));
elem e25(char32_t(98));
elem e26(char32_t(99));
elem e27(char32_t(100));
elem e28(char32_t(101));
elem e29(char32_t(102));
production gp30{{e16, e17, e2, e18, e2, e19, e2, e20, e2, e21, e2, e22, e2, e23, e2, e24, e2, e25, e2, e26, e2, e27, e2, e28, e2, e29, }, {}, };
elem e31(elem::SYM, t_arith_op::NOP, dict.get_lexeme("hex_escape"));
elem e32(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"\\\\x\""));
production gp33{{e31, e32, e16, e16, }, {}, };
elem e34(elem::SYM, t_arith_op::NOP, dict.get_lexeme("unicode_escape"));
elem e35(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"\\\\u\""));
production gp36{{e34, e35, e16, e16, e16, e16, }, {}, };
elem e37(elem::SYM, t_arith_op::NOP, dict.get_lexeme("char_escape_encode"));
production gp38{{e37, e31, e2, e34, }, {}, };
elem e39(elem::SYM, t_arith_op::NOP, dict.get_lexeme("char0"));
elem e40(elem::SYM, t_arith_op::NOP, dict.get_lexeme("alnum"));
elem e41(char32_t(33));
elem e42(char32_t(36));
elem e43(char32_t(37));
elem e44(char32_t(38));
elem e45(char32_t(40));
elem e46(char32_t(41));
elem e47(char32_t(42));
elem e48(char32_t(43));
elem e49(char32_t(44));
elem e50(char32_t(45));
elem e51(char32_t(46));
elem e52(char32_t(47));
elem e53(char32_t(58));
elem e54(char32_t(59));
elem e55(char32_t(60));
elem e56(char32_t(61));
elem e57(char32_t(62));
elem e58(char32_t(63));
elem e59(char32_t(64));
elem e60(char32_t(91));
elem e61(char32_t(92));
elem e62(char32_t(93));
elem e63(char32_t(94));
elem e64(char32_t(95));
elem e65(char32_t(123));
elem e66(char32_t(124));
elem e67(char32_t(125));
elem e68(char32_t(126));
production gp69{{e39, e40, e2, e11, e2, e37, e2, e41, e2, e7, e2, e42, e2, e43, e2, e44, e2, e45, e2, e46, e2, e47, e2, e48, e2, e49, e2, e50, e2, e51, e2, e52, e2, e53, e2, e54, e2, e55, e2, e56, e2, e57, e2, e58, e2, e59, e2, e60, e2, e61, e2, e62, e2, e63, e2, e64, e2, e65, e2, e66, e2, e67, e2, e68, }, {}, };
elem e70(elem::SYM, t_arith_op::NOP, dict.get_lexeme("char"));
elem e71(char32_t(39));
elem e72(char32_t(34));
elem e73(char32_t(96));
production gp74{{e70, e39, e2, e61, e71, e2, e72, e2, e73, }, {}, };
elem e75(elem::SYM, t_arith_op::NOP, dict.get_lexeme("string_char"));
production gp76{{e75, e39, e2, e71, e2, e61, e72, e2, e73, }, {}, };
elem e77(elem::SYM, t_arith_op::NOP, dict.get_lexeme("quote_string_char"));
production gp78{{e77, e39, e2, e71, e2, e72, e2, e61, e73, }, {}, };
elem e79(elem::SYM, t_arith_op::NOP, dict.get_lexeme("string_chars"));
elem e80(elem::SYM, t_arith_op::NOP, dict.get_lexeme("string_chars1"));
production gp81{{e79, e75, e80, }, {}, };
production gp82{{e80, e75, e80, e2, e14, }, {}, };
elem e83(elem::SYM, t_arith_op::NOP, dict.get_lexeme("quote_string_chars"));
elem e84(elem::SYM, t_arith_op::NOP, dict.get_lexeme("quote_string_chars1"));
production gp85{{e83, e77, e84, }, {}, };
production gp86{{e84, e77, e84, e2, e14, }, {}, };
elem e87(elem::SYM, t_arith_op::NOP, dict.get_lexeme("printable"));
elem e88(elem::SYM, t_arith_op::NOP, dict.get_lexeme("printable_chars_rest"));
production gp89{{e8, e87, e88, }, {}, };
production gp90{{e88, e87, e88, e2, e14, }, {}, };
elem e91(elem::SYM, t_arith_op::NOP, dict.get_lexeme("chars"));
elem e92(elem::SYM, t_arith_op::NOP, dict.get_lexeme("alpha"));
elem e93(elem::SYM, t_arith_op::NOP, dict.get_lexeme("chars1"));
production gp94{{e91, e92, e93, e2, e64, e93, }, {}, };
production gp95{{e93, e40, e93, e2, e64, e93, e2, e14, }, {}, };
elem e96(elem::SYM, t_arith_op::NOP, dict.get_lexeme("integer"));
elem e97(elem::ARITH, t_arith_op::ADD, dict.get_lexeme("+"));
production gp98{{e96, e17, e97, }, {}, };
elem e99(elem::SYM, t_arith_op::NOP, dict.get_lexeme("sym"));
production gp100{{e99, e91, }, {}, };
elem e101(elem::SYM, t_arith_op::NOP, dict.get_lexeme("var"));
production gp102{{e101, e58, e91, }, {}, };
elem e103(elem::SYM, t_arith_op::NOP, dict.get_lexeme("number"));
production gp104{{e103, e96, }, {}, };
elem e105(elem::SYM, t_arith_op::NOP, dict.get_lexeme("quoted_char"));
elem e106(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"'\""));
elem e107(elem::SYM, t_arith_op::NOP, dict.get_lexeme("quoted_char_esc"));
elem e108(elem::SYM, t_arith_op::NOP, dict.get_lexeme("empty_char"));
production gp109{{e105, e106, e70, e106, e2, e106, e37, e106, e2, e107, e2, e108, }, {}, };
elem e110(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"''\""));
production gp111{{e108, e110, }, {}, };
elem e112(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"'\\\\\""));
production gp113{{e107, e112, e87, e106, }, {}, };
elem e114(elem::SYM, t_arith_op::NOP, dict.get_lexeme("string"));
elem e115(elem::SYM, t_arith_op::NOP, dict.get_lexeme("empty_string"));
production gp116{{e114, e72, e79, e72, e2, e115, }, {}, };
production gp117{{e115, e72, e72, }, {}, };
elem e118(elem::SYM, t_arith_op::NOP, dict.get_lexeme("quote_string"));
elem e119(elem::SYM, t_arith_op::NOP, dict.get_lexeme("empty_quote_string"));
production gp120{{e118, e73, e83, e73, e2, e119, }, {}, };
production gp121{{e119, e73, e73, }, {}, };
elem e122(elem::SYM, t_arith_op::NOP, dict.get_lexeme("term"));
elem e123(elem::SYM, t_arith_op::NOP, dict.get_lexeme("negative_term"));
elem e124(elem::SYM, t_arith_op::NOP, dict.get_lexeme("positive_term"));
production gp125{{e122, e123, e2, e124, }, {}, };
production gp126{{e123, e68, e12, e124, }, {}, };
elem e127(elem::SYM, t_arith_op::NOP, dict.get_lexeme("relname"));
elem e128(elem::SYM, t_arith_op::NOP, dict.get_lexeme("args"));
production gp129{{e124, e127, e128, e2, e127, }, {}, };
elem e130(elem::SYM, t_arith_op::NOP, dict.get_lexeme("elems"));
production gp131{{e128, e12, e45, e12, e130, e12, e46, e2, e12, e45, e12, e46, }, {}, };
elem e132(elem::SYM, t_arith_op::NOP, dict.get_lexeme("elem"));
elem e133(elem::SYM, t_arith_op::NOP, dict.get_lexeme("elems_rest"));
production gp134{{e130, e132, e2, e132, e10, e133, e2, e127, e128, e2, e127, e128, e12, e133, }, {}, };
production gp135{{e133, e132, e2, e132, e128, e2, e132, e10, e133, e2, e128, }, {}, };
elem e136(elem::SYM, t_arith_op::NOP, dict.get_lexeme("char_builtin"));
production gp137{{e132, e99, e2, e101, e2, e103, e2, e105, e2, e114, e2, e136, }, {}, };
production gp138{{e127, e99, }, {}, };
elem e139(elem::SYM, t_arith_op::NOP, dict.get_lexeme("builtin_expr"));
elem e140(elem::SYM, t_arith_op::NOP, dict.get_lexeme("builtin_term"));
elem e141(elem::SYM, t_arith_op::NOP, dict.get_lexeme("builtin_prefixes"));
production gp142{{e139, e140, e2, e141, e12, e140, }, {}, };
elem e143(elem::SYM, t_arith_op::NOP, dict.get_lexeme("builtin_prefix"));
production gp144{{e141, e143, e2, e143, e12, e141, }, {}, };
elem e145(elem::SYM, t_arith_op::NOP, dict.get_lexeme("renew_prefix"));
elem e146(elem::SYM, t_arith_op::NOP, dict.get_lexeme("forget_prefix"));
production gp147{{e143, e145, e2, e146, }, {}, };
elem e148(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"renew\""));
production gp149{{e145, e148, }, {}, };
elem e150(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"forget\""));
production gp151{{e146, e150, }, {}, };
elem e152(elem::SYM, t_arith_op::NOP, dict.get_lexeme("builtin"));
production gp153{{e140, e152, e128, e2, e152, }, {}, };
elem e154(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"halt\""));
elem e155(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"error\""));
elem e156(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"false\""));
elem e157(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"rnd\""));
elem e158(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"count\""));
elem e159(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"bw_and\""));
elem e160(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"bw_or\""));
elem e161(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"bw_xor\""));
elem e162(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"bw_not\""));
elem e163(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"pw_add\""));
elem e164(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"pw_mult\""));
elem e165(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"leq\""));
elem e166(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"print\""));
elem e167(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"println\""));
elem e168(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"println_to\""));
elem e169(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"print_to\""));
elem e170(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"print_delim\""));
elem e171(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"println_delim\""));
elem e172(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"print_to_delim\""));
elem e173(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"println_to_delim\""));
elem e174(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"js_eval\""));
production gp175{{e152, e154, e2, e155, e2, e156, e2, e150, e2, e157, e2, e158, e2, e159, e2, e160, e2, e161, e2, e162, e2, e163, e2, e164, e2, e165, e2, e166, e2, e167, e2, e168, e2, e169, e2, e170, e2, e171, e2, e172, e2, e173, e2, e174, }, {}, };
elem e176(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"alpha\""));
elem e177(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"alnum\""));
elem e178(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"digit\""));
elem e179(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"space\""));
elem e180(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"printable\""));
elem e181(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"eof\""));
production gp182{{e136, e176, e2, e177, e2, e178, e2, e179, e2, e180, e2, e181, }, {}, };
elem e183(elem::SYM, t_arith_op::NOP, dict.get_lexeme("arith_expr"));
elem e184(elem::SYM, t_arith_op::NOP, dict.get_lexeme("arith_op_expr"));
elem e185(elem::SYM, t_arith_op::NOP, dict.get_lexeme("arith_waux_expr"));
production gp186{{e183, e184, e2, e185, }, {}, };
elem e187(elem::SYM, t_arith_op::NOP, dict.get_lexeme("arith_op"));
production gp188{{e184, e132, e12, e187, e12, e132, }, {}, };
elem e189(elem::SYM, t_arith_op::NOP, dict.get_lexeme("arith_aux_op"));
production gp190{{e185, e132, e12, e189, e12, e132, e12, e187, e12, e132, }, {}, };
production gp191{{e185, e132, e12, e189, e12, e132, e12, e187, e12, e132, e12, e132, }, {}, };
elem e192(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"==\""));
elem e193(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"!=\""));
elem e194(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"<=\""));
elem e195(elem::STR, t_arith_op::NOP, dict.get_lexeme("\">=\""));
production gp196{{e187, e56, e2, e192, e2, e193, e2, e194, e2, e195, e2, e57, e2, e55, }, {}, };
elem e197(elem::STR, t_arith_op::NOP, dict.get_lexeme("\">>\""));
elem e198(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"<<\""));
production gp199{{e189, e48, e2, e50, e2, e47, e2, e66, e2, e44, e2, e63, e2, e197, e2, e198, }, {}, };
elem e200(elem::SYM, t_arith_op::NOP, dict.get_lexeme("rule"));
elem e201(elem::SYM, t_arith_op::NOP, dict.get_lexeme("preds"));
elem e202(elem::STR, t_arith_op::NOP, dict.get_lexeme("\":-\""));
production gp203{{e200, e201, e12, e202, e12, e201, e12, e51, }, {}, };
elem e204(elem::SYM, t_arith_op::NOP, dict.get_lexeme("fact"));
elem e205(elem::SYM, t_arith_op::NOP, dict.get_lexeme("pred"));
production gp206{{e204, e205, e12, e51, }, {}, };
elem e207(elem::SYM, t_arith_op::NOP, dict.get_lexeme("preds_rest"));
production gp208{{e201, e205, e207, }, {}, };
production gp209{{e207, e49, e12, e205, e207, e2, e14, }, {}, };
production gp210{{e205, e139, e2, e183, e2, e122, }, {}, };
elem e211(elem::SYM, t_arith_op::NOP, dict.get_lexeme("block"));
elem e212(elem::SYM, t_arith_op::NOP, dict.get_lexeme("prog"));
production gp213{{e211, e65, e212, e12, e67, }, {}, };
elem e214(elem::SYM, t_arith_op::NOP, dict.get_lexeme("query"));
elem e215(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"!!\""));
production gp216{{e214, e41, e12, e122, e12, e51, e2, e215, e12, e122, e12, e51, }, {}, };
elem e217(elem::SYM, t_arith_op::NOP, dict.get_lexeme("macro"));
elem e218(elem::STR, t_arith_op::NOP, dict.get_lexeme("\":=\""));
production gp219{{e217, e124, e12, e218, e12, e201, e12, e51, }, {}, };
elem e220(elem::SYM, t_arith_op::NOP, dict.get_lexeme("production"));
elem e221(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"=>\""));
elem e222(elem::SYM, t_arith_op::NOP, dict.get_lexeme("alts"));
elem e223(elem::SYM, t_arith_op::NOP, dict.get_lexeme("constraints"));
production gp224{{e220, e127, e12, e221, e12, e222, e223, e12, e51, }, {}, };
elem e225(elem::SYM, t_arith_op::NOP, dict.get_lexeme("alt"));
elem e226(elem::SYM, t_arith_op::NOP, dict.get_lexeme("alts_rest"));
production gp227{{e222, e225, e226, }, {}, };
elem e228(elem::SYM, t_arith_op::NOP, dict.get_lexeme("alt_separator"));
production gp229{{e226, e12, e228, e12, e225, e226, e2, e14, }, {}, };
production gp230{{e228, e66, }, {}, };
elem e231(elem::SYM, t_arith_op::NOP, dict.get_lexeme("nt_nt_alt"));
elem e232(elem::SYM, t_arith_op::NOP, dict.get_lexeme("nt_t_alt"));
elem e233(elem::SYM, t_arith_op::NOP, dict.get_lexeme("t_nt_alt"));
elem e234(elem::SYM, t_arith_op::NOP, dict.get_lexeme("t_t_alt"));
production gp235{{e225, e231, e2, e232, e2, e233, e2, e234, }, {}, };
elem e236(elem::SYM, t_arith_op::NOP, dict.get_lexeme("t_t_factor"));
production gp237{{e234, e236, e2, e236, e12, e234, e2, e236, e12, e232, }, {}, };
production gp238{{e233, e236, e12, e233, e2, e236, e12, e231, }, {}, };
elem e239(elem::SYM, t_arith_op::NOP, dict.get_lexeme("nt_t_factor"));
elem e240(elem::SYM, t_arith_op::NOP, dict.get_lexeme("nt_nt_factor"));
production gp241{{e232, e239, e2, e240, e10, e232, e2, e240, e12, e234, e2, e239, e12, e232, e2, e239, e12, e234, }, {}, };
production gp242{{e231, e240, e2, e240, e10, e231, e2, e240, e12, e233, e2, e239, e12, e231, e2, e239, e12, e233, }, {}, };
elem e243(elem::SYM, t_arith_op::NOP, dict.get_lexeme("terminal"));
elem e244(elem::SYM, t_arith_op::NOP, dict.get_lexeme("unot"));
production gp245{{e236, e243, e2, e243, e12, e244, e2, e45, e12, e225, e12, e46, e2, e45, e12, e225, e12, e46, e12, e244, e2, e65, e12, e225, e12, e67, e2, e60, e12, e225, e12, e62, }, {}, };
elem e246(elem::SYM, t_arith_op::NOP, dict.get_lexeme("nonterminal"));
production gp247{{e239, e246, e12, e244, }, {}, };
production gp248{{e240, e246, }, {}, };
production gp249{{e244, e47, e2, e48, }, {}, };
production gp250{{e243, e105, e2, e114, }, {}, };
production gp251{{e246, e127, }, {}, };
elem e252(elem::SYM, t_arith_op::NOP, dict.get_lexeme("constraint"));
production gp253{{e223, e12, e49, e12, e252, e223, e2, e14, }, {}, };
elem e254(elem::SYM, t_arith_op::NOP, dict.get_lexeme("constraint_elem"));
production gp255{{e252, e254, e12, e187, e12, e254, e2, e254, e12, e189, e12, e254, e12, e187, e12, e254, }, {}, };
elem e256(elem::SYM, t_arith_op::NOP, dict.get_lexeme("constraint_builtin"));
production gp257{{e254, e132, e2, e256, }, {}, };
elem e258(elem::SYM, t_arith_op::NOP, dict.get_lexeme("constraint_builtin_name"));
elem e259(elem::SYM, t_arith_op::NOP, dict.get_lexeme("constraint_arg"));
production gp260{{e256, e258, e12, e45, e12, e259, e12, e46, }, {}, };
production gp261{{e259, e96, }, {}, };
elem e262(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"len\""));
elem e263(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"substr\""));
production gp264{{e258, e262, e2, e263, }, {}, };
elem e265(elem::SYM, t_arith_op::NOP, dict.get_lexeme("directive"));
elem e266(elem::SYM, t_arith_op::NOP, dict.get_lexeme("string_drctv"));
elem e267(elem::SYM, t_arith_op::NOP, dict.get_lexeme("stdout_drctv"));
elem e268(elem::SYM, t_arith_op::NOP, dict.get_lexeme("trace_drctv"));
elem e269(elem::SYM, t_arith_op::NOP, dict.get_lexeme("internal_drctv"));
elem e270(elem::SYM, t_arith_op::NOP, dict.get_lexeme("domain_drctv"));
elem e271(elem::SYM, t_arith_op::NOP, dict.get_lexeme("eval_drctv"));
elem e272(elem::SYM, t_arith_op::NOP, dict.get_lexeme("quote_drctv"));
elem e273(elem::SYM, t_arith_op::NOP, dict.get_lexeme("codec_drctv"));
elem e274(elem::SYM, t_arith_op::NOP, dict.get_lexeme("bwd_drctv"));
production gp275{{e265, e266, e2, e267, e2, e268, e2, e269, e2, e270, e2, e271, e2, e272, e2, e273, e2, e274, }, {}, };
elem e276(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"@string\""));
elem e277(elem::SYM, t_arith_op::NOP, dict.get_lexeme("strdir"));
production gp278{{e266, e276, e10, e277, e12, e51, }, {}, };
elem e279(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"@stdout\""));
production gp280{{e267, e279, e10, e124, e12, e51, }, {}, };
elem e281(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"@trace\""));
production gp282{{e268, e281, e10, e127, e12, e51, }, {}, };
elem e283(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"@internal\""));
production gp284{{e269, e283, e10, e124, e12, e51, }, {}, };
elem e285(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"@domain\""));
production gp286{{e270, e285, e10, e99, e12, e96, e12, e96, e12, e51, }, {}, };
elem e287(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"@eval\""));
production gp288{{e271, e287, e10, e99, e12, e99, e12, e99, e12, e96, e12, e51, }, {}, };
elem e289(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"@quote\""));
production gp290{{e272, e289, e10, e99, e12, e99, e12, e118, e12, e51, }, {}, };
elem e291(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"@codec\""));
production gp292{{e273, e291, e10, e99, e12, e99, e12, e99, e12, e96, e12, e51, }, {}, };
elem e293(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"@bwd\""));
production gp294{{e274, e293, e12, e51, }, {}, };
elem e295(elem::SYM, t_arith_op::NOP, dict.get_lexeme("fname"));
elem e296(elem::SYM, t_arith_op::NOP, dict.get_lexeme("cmdline"));
elem e297(elem::SYM, t_arith_op::NOP, dict.get_lexeme("cmdlinefile"));
production gp298{{e277, e127, e12, e295, e2, e127, e12, e114, e2, e127, e12, e296, e2, e127, e12, e297, e2, e127, e12, e124, }, {}, };
production gp299{{e295, e55, e8, e57, }, {}, };
production gp300{{e296, e42, e96, }, {}, };
production gp301{{e297, e55, e42, e96, e57, }, {}, };
elem e302(elem::SYM, t_arith_op::NOP, dict.get_lexeme("typedef"));
elem e303(elem::SYM, t_arith_op::NOP, dict.get_lexeme("predtypedef"));
elem e304(elem::SYM, t_arith_op::NOP, dict.get_lexeme("structypedef"));
production gp305{{e302, e303, e2, e304, }, {}, };
elem e306(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"predtype\""));
elem e307(elem::SYM, t_arith_op::NOP, dict.get_lexeme("predtypedef_args"));
production gp308{{e303, e306, e10, e127, e12, e307, e12, e51, }, {}, };
elem e309(elem::SYM, t_arith_op::NOP, dict.get_lexeme("type"));
elem e310(elem::OPENP, t_arith_op::NOP, dict.get_lexeme("("));
elem e311(elem::CLOSEP, t_arith_op::NOP, dict.get_lexeme(")"));
elem e312(elem::ARITH, t_arith_op::MULT, dict.get_lexeme("*"));
production gp313{{e307, e45, e12, e46, e2, e45, e12, e309, e12, e101, e310, e12, e49, e12, e309, e12, e101, e311, e312, e12, e46, }, {}, };
elem e314(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"struct\""));
elem e315(elem::SYM, t_arith_op::NOP, dict.get_lexeme("structypename"));
elem e316(elem::SYM, t_arith_op::NOP, dict.get_lexeme("membdecl"));
production gp317{{e304, e314, e12, e315, e12, e65, e12, e316, e310, e12, e316, e311, e312, e12, e67, }, {}, };
production gp318{{e315, e127, }, {}, };
elem e319(elem::SYM, t_arith_op::NOP, dict.get_lexeme("structype"));
production gp320{{e319, e127, }, {}, };
production gp321{{e316, e309, e12, e101, e310, e12, e49, e12, e101, e311, e312, e12, e51, }, {}, };
elem e322(elem::SYM, t_arith_op::NOP, dict.get_lexeme("primtype"));
production gp323{{e309, e322, e2, e319, }, {}, };
elem e324(elem::SYM, t_arith_op::NOP, dict.get_lexeme("simple_type"));
elem e325(elem::SYM, t_arith_op::NOP, dict.get_lexeme("bitsz_type"));
production gp326{{e322, e324, e2, e325, }, {}, };
elem e327(elem::SYM, t_arith_op::NOP, dict.get_lexeme("int_type"));
elem e328(elem::SYM, t_arith_op::NOP, dict.get_lexeme("char_type"));
elem e329(elem::SYM, t_arith_op::NOP, dict.get_lexeme("sym_type"));
production gp330{{e324, e327, e2, e328, e2, e329, }, {}, };
elem e331(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"int\""));
production gp332{{e327, e331, }, {}, };
elem e333(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"char\""));
production gp334{{e328, e333, }, {}, };
elem e335(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"sym\""));
production gp336{{e329, e335, }, {}, };
elem e337(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"int:\""));
elem e338(elem::SYM, t_arith_op::NOP, dict.get_lexeme("bitsz"));
production gp339{{e325, e337, e12, e338, }, {}, };
production gp340{{e338, e96, }, {}, };
elem e341(elem::SYM, t_arith_op::NOP, dict.get_lexeme("state_block"));
elem e342(elem::SYM, t_arith_op::NOP, dict.get_lexeme("sb_header"));
elem e343(elem::SYM, t_arith_op::NOP, dict.get_lexeme("sb_statements"));
production gp344{{e341, e60, e342, e343, e12, e62, }, {}, };
elem e345(elem::SYM, t_arith_op::NOP, dict.get_lexeme("sb_flipping"));
elem e346(elem::SYM, t_arith_op::NOP, dict.get_lexeme("sb_nonflipping"));
production gp347{{e342, e345, e2, e346, }, {}, };
elem e348(elem::SYM, t_arith_op::NOP, dict.get_lexeme("sb_label"));
elem e349(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"~:\""));
production gp350{{e345, e348, e349, }, {}, };
production gp351{{e346, e348, e53, }, {}, };
production gp352{{e348, e127, }, {}, };
elem e353(elem::SYM, t_arith_op::NOP, dict.get_lexeme("sb_statement"));
elem e354(elem::SYM, t_arith_op::NOP, dict.get_lexeme("sb_statements_rest"));
production gp355{{e343, e12, e353, e354, }, {}, };
production gp356{{e354, e12, e353, e354, e2, e14, }, {}, };
elem e357(elem::SYM, t_arith_op::NOP, dict.get_lexeme("fof"));
production gp358{{e353, e341, e2, e204, e2, e200, e2, e357, }, {}, };
elem e359(elem::SYM, t_arith_op::NOP, dict.get_lexeme("form"));
production gp360{{e357, e201, e12, e202, e12, e359, e12, e51, }, {}, };
elem e361(elem::SYM, t_arith_op::NOP, dict.get_lexeme("form1"));
elem e362(elem::SYM, t_arith_op::NOP, dict.get_lexeme("causal_op"));
production gp363{{e359, e361, e310, e12, e362, e12, e361, e311, e312, }, {}, };
elem e364(elem::SYM, t_arith_op::NOP, dict.get_lexeme("matrix"));
elem e365(elem::SYM, t_arith_op::NOP, dict.get_lexeme("junct_op"));
production gp366{{e361, e364, e310, e12, e365, e12, e364, e311, e312, }, {}, };
elem e367(elem::SYM, t_arith_op::NOP, dict.get_lexeme("implies"));
elem e368(elem::SYM, t_arith_op::NOP, dict.get_lexeme("coimplies"));
production gp369{{e362, e367, e2, e368, }, {}, };
elem e370(elem::SYM, t_arith_op::NOP, dict.get_lexeme("and"));
elem e371(elem::SYM, t_arith_op::NOP, dict.get_lexeme("or"));
production gp372{{e365, e370, e2, e371, }, {}, };
elem e373(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"&&\""));
production gp374{{e370, e373, }, {}, };
elem e375(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"||\""));
production gp376{{e371, e375, }, {}, };
elem e377(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"->\""));
production gp378{{e367, e377, }, {}, };
elem e379(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"<->\""));
production gp380{{e368, e379, }, {}, };
elem e381(elem::SYM, t_arith_op::NOP, dict.get_lexeme("neg_matrix"));
elem e382(elem::SYM, t_arith_op::NOP, dict.get_lexeme("matrix_block"));
elem e383(elem::SYM, t_arith_op::NOP, dict.get_lexeme("prefix_decl"));
production gp384{{e364, e381, e2, e382, e2, e383, e2, e124, e2, e183, }, {}, };
production gp385{{e381, e68, e364, }, {}, };
production gp386{{e382, e65, e12, e359, e12, e67, }, {}, };
elem e387(elem::SYM, t_arith_op::NOP, dict.get_lexeme("prefix"));
elem e388(elem::SYM, t_arith_op::NOP, dict.get_lexeme("prefix_arg"));
production gp389{{e383, e387, e12, e388, e2, e387, e12, e388, e12, e359, }, {}, };
elem e390(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"forall\""));
elem e391(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"exists\""));
elem e392(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"unique\""));
production gp393{{e387, e390, e2, e391, e2, e392, }, {}, };
production gp394{{e388, e101, e2, e127, }, {}, };
elem e395(elem::SYM, t_arith_op::NOP, dict.get_lexeme("guard_statement"));
elem e396(elem::SYM, t_arith_op::NOP, dict.get_lexeme("if_then_else"));
elem e397(elem::SYM, t_arith_op::NOP, dict.get_lexeme("if_then"));
elem e398(elem::SYM, t_arith_op::NOP, dict.get_lexeme("while_do"));
production gp399{{e395, e396, e2, e397, e2, e398, }, {}, };
elem e400(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"if\""));
elem e401(elem::SYM, t_arith_op::NOP, dict.get_lexeme("condition"));
elem e402(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"then\""));
elem e403(elem::SYM, t_arith_op::NOP, dict.get_lexeme("gs_prog"));
production gp404{{e397, e400, e12, e401, e12, e402, e12, e403, }, {}, };
elem e405(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"else\""));
production gp406{{e396, e397, e12, e405, e12, e403, }, {}, };
elem e407(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"while\""));
elem e408(elem::STR, t_arith_op::NOP, dict.get_lexeme("\"do\""));
production gp409{{e398, e407, e12, e401, e12, e408, e12, e403, }, {}, };
production gp410{{e401, e359, }, {}, };
elem e411(elem::SYM, t_arith_op::NOP, dict.get_lexeme("statement"));
elem e412(elem::SYM, t_arith_op::NOP, dict.get_lexeme("statement0"));
production gp413{{e403, e212, e2, e411, e2, e412, }, {}, };
elem e414(elem::SYM, t_arith_op::NOP, dict.get_lexeme("rule0"));
elem e415(elem::SYM, t_arith_op::NOP, dict.get_lexeme("fact0"));
elem e416(elem::SYM, t_arith_op::NOP, dict.get_lexeme("fof0"));
production gp417{{e412, e414, e2, e415, e2, e416, }, {}, };
production gp418{{e414, e201, e12, e202, e12, e201, }, {}, };
production gp419{{e415, e205, }, {}, };
production gp420{{e416, e201, e12, e202, e12, e359, }, {}, };
elem e421(elem::SYM, t_arith_op::NOP, dict.get_lexeme("statements"));
production gp422{{e212, e421, }, {}, };
production gp423{{e421, e12, e411, e421, e2, e14, }, {}, };
production gp424{{e411, e211, e2, e341, e2, e265, e2, e214, e2, e395, e2, e302, e2, e204, e2, e200, e2, e220, e2, e217, e2, e357, }, {}, };
elem e425(elem::SYM, t_arith_op::NOP, dict.get_lexeme("start"));
production gp426{{e425, e212, e12, }, {}, };
raw_prog rp427(dict);
rp427.g.insert(rp427.g.end(), { gp5, gp9, gp13, gp15, gp30, gp33, gp36, gp38, gp69, gp74, gp76, gp78, gp81, gp82, gp85, gp86, gp89, gp90, gp94, gp95, gp98, gp100, gp102, gp104, gp109, gp111, gp113, gp116, gp117, gp120, gp121, gp125, gp126, gp129, gp131, gp134, gp135, gp137, gp138, gp142, gp144, gp147, gp149, gp151, gp153, gp175, gp182, gp186, gp188, gp190, gp191, gp196, gp199, gp203, gp206, gp208, gp209, gp210, gp213, gp216, gp219, gp224, gp227, gp229, gp230, gp235, gp237, gp238, gp241, gp242, gp245, gp247, gp248, gp249, gp250, gp251, gp253, gp255, gp257, gp260, gp261, gp264, gp275, gp278, gp280, gp282, gp284, gp286, gp288, gp290, gp292, gp294, gp298, gp299, gp300, gp301, gp305, gp308, gp313, gp317, gp318, gp320, gp321, gp323, gp326, gp330, gp332, gp334, gp336, gp339, gp340, gp344, gp347, gp350, gp351, gp352, gp355, gp356, gp358, gp360, gp363, gp366, gp369, gp372, gp374, gp376, gp378, gp380, gp384, gp385, gp386, gp389, gp393, gp394, gp399, gp404, gp406, gp409, gp410, gp413, gp417, gp418, gp419, gp420, gp422, gp423, gp424, gp426, });
raw_prog rp428(dict);
rp428.nps.emplace_back(dict);
rp428.nps.back().merge(rp427);
raw_progs rps429(dict);
rps429.p.merge(rp428);

auto& program_gen = rps429;
