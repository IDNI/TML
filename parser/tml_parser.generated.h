// This file is generated by IDNI/parser/tools/parser_gen
#include <string.h>
#include "parser.h"
struct tml_parser {
	tml_parser() :
		nts(load_nonterminals()), cc(load_cc()),
		g(nts, load_prods(), nt(156), cc), p(g) { }
	std::unique_ptr<typename idni::parser<char32_t>::pforest> parse(
		const char32_t* data, size_t size = 0,
		char32_t eof = std::char_traits<char32_t>::eof())
			{ return p.parse(data, size, eof); }
	std::unique_ptr<typename idni::parser<char32_t>::pforest> parse(
		int filedescriptor, size_t size = 0,
		char32_t eof = std::char_traits<char32_t>::eof())
			{ return p.parse(filedescriptor, size, eof); }
	std::unique_ptr<typename idni::parser<char32_t>::pforest> parse(
		std::basic_istream<char32_t>& is,
		size_t size = 0,
		char32_t eof = std::char_traits<char32_t>::eof())
			{ return p.parse(is, size, eof); }
	bool found() { return p.found(); }
	typename idni::parser<char32_t>::perror_t get_error()
		{ return p.get_error(); }
private:
	std::vector<char32_t> ts{
		U'\0', U'\n', U'\r', U'#', U'\\', U'x', U'u', U'\'', U'"', 
		U'`', U'?', U'~', U'(', U')', U'r', U'e', U'n', U'w', U'f', 
		U'o', U'g', U't', U'b', U'_', U'a', U'd', U'c', U'l', U's', 
		U'h', U'j', U'v', U'q', U'p', U'i', U'm', U'k', U'!', U'=', 
		U'<', U'>', U'&', U'*', U'+', U'-', U'^', U'|', U':', U'.', 
		U',', U'{', U'}', U'[', U']', U'@', U'$', U'y', 
	};
	idni::nonterminals<char32_t> nts{};
	idni::char_class_fns<char32_t> cc;
	idni::grammar<char32_t> g;
	idni::parser<char32_t> p;
	idni::prods<char32_t> t(size_t tid) {
		return idni::prods<char32_t>(ts[tid]);
	}
	idni::prods<char32_t> nt(size_t ntid) {
		return idni::prods<char32_t>(idni::lit<char32_t>(ntid, &nts));
	}
	idni::nonterminals<char32_t> load_nonterminals() const {
		idni::nonterminals<char32_t> nts{};
		for (const auto& nt : {
			U"", U"eof", U"space", U"digit", U"xdigit", U"alpha", U"alnum", U"punct", U"printable", U"eol", 
			U"ws_comment", U"_Rws_comment_0", U"ws_required", U"ws", U"_Rws_1", U"hex_escape", U"unicode_escape", U"char_escape_encode", U"esc", U"q_char", 
			U"q_str", U"q_bqstr", U"char_punct", U"_Rchar_punct_2", U"_Rchar_punct_3", U"_Rchar_punct_4", U"char0", U"char_", U"string_char", U"bqstring_char", 
			U"chars", U"_Rchars_5", U"_Rchars_6", U"integer", U"_Rinteger_7", U"sym", U"var", U"number", U"quoted_char", U"quoted_char_esc", 
			U"empty_char", U"string", U"_Rstring_8", U"empty_string", U"bqstring", U"_Rbqstring_9", U"empty_bqstring", U"term", U"negative_term", U"positive_term", 
			U"relname", U"args", U"elems", U"elem", U"elems_rest", U"char_class", U"builtin_expr", U"builtin_term", U"builtin_prefixes", U"builtin_prefix", 
			U"renew_prefix", U"forget_prefix", U"builtin", U"arith_expr", U"arith_op_expr", U"arith_waux_expr", U"arith_op", U"arith_aux_op", U"rule", U"preds", 
			U"fact", U"pred", U"_Rpreds_10", U"_Rpreds_11", U"block", U"prog", U"query", U"macro", U"production", U"prod_expr_elem", 
			U"_Rproduction_12", U"_Rproduction_13", U"directive", U"string_drctv", U"stdout_drctv", U"trace_drctv", U"internal_drctv", U"bwd_drctv", U"strdir", U"fname", 
			U"cmdline", U"cmdlinefile", U"printable_char", U"_Rfname_14", U"typedef_", U"predtypedef", U"structypedef", U"predtypedef_args", U"type", U"_Rpredtypedef_args_15", 
			U"_Rpredtypedef_args_16", U"structypename", U"membdecl", U"_Rstructypedef_17", U"_Rstructypedef_18", U"structype", U"_Rmembdecl_19", U"_Rmembdecl_20", U"primtype", U"simple_type", 
			U"bitsz_type", U"int_type", U"char_type", U"sym_type", U"bitsz", U"state_block", U"sb_header", U"sb_statement", U"_Rstate_block_21", U"_Rstate_block_22", 
			U"sb_flipping", U"sb_nonflipping", U"sb_label", U"fof", U"form", U"form1", U"causal_op", U"_Rform_23", U"_Rform_24", U"matrix", 
			U"junct_op", U"_Rform1_25", U"_Rform1_26", U"implies", U"coimplies", U"and_", U"or_", U"neg_matrix", U"matrix_block", U"prefix_decl", 
			U"prefix", U"prefix_arg", U"guard_statement", U"if_then_else", U"if_then", U"while_do", U"condition", U"gs_prog", U"statement", U"statement0", 
			U"rule0", U"fact0", U"fof0", U"program", U"_Rprogram_27", U"_Rprogram_28", U"start", 
		}) nts.get(nt);
		return nts;
	}
	idni::char_class_fns<char32_t> load_cc() {
		return idni::predefined_char_classes<char32_t>({
			U"eof",
			U"space",
			U"digit",
			U"xdigit",
			U"alpha",
			U"alnum",
			U"punct",
			U"printable",
		}, nts);
	}
	idni::prods<char32_t> load_prods() {
		idni::prods<char32_t> q;
		q(nt(9), (nt(1)));
		q(nt(9), (t(1)));
		q(nt(9), (t(2)));
		q(nt(11), (t(3)+nt(8)));
		q(nt(11), (t(3)+nt(8)+nt(11)));
		q(nt(10), (nt(11)+nt(9)));
		q(nt(10), (t(3)+nt(9)));
		q(nt(12), (nt(2)+nt(13)));
		q(nt(12), (nt(10)+nt(13)));
		q(nt(14), (nt(12)));
		q(nt(14), (t(0)));
		q(nt(13), (nt(14)));
		q(nt(15), (t(4)+t(4)+t(5)+nt(4)+nt(4)));
		q(nt(16), (t(4)+t(4)+t(6)+nt(4)+nt(4)+nt(4)+nt(4)));
		q(nt(17), (nt(15)));
		q(nt(17), (nt(16)));
		q(nt(18), (t(4)+t(4)+t(4)+t(4)));
		q(nt(19), (t(7)));
		q(nt(20), (t(8)));
		q(nt(21), (t(9)));
		q(nt(23), (nt(18)+nt(19)));
		q(nt(24), (nt(18)+nt(20)));
		q(nt(25), (nt(18)+nt(21)));
		q(nt(22), (nt(7)) & (nt(19)) & (nt(20)) & (nt(21)) & (nt(23)) & (nt(24)) & (nt(25)));
		q(nt(26), (nt(2)));
		q(nt(26), (nt(6)));
		q(nt(26), (nt(17)));
		q(nt(26), (nt(22)));
		q(nt(27), (nt(18)+nt(19)));
		q(nt(27), (nt(20)));
		q(nt(27), (nt(21)));
		q(nt(27), (nt(26)));
		q(nt(28), (nt(18)+nt(20)));
		q(nt(28), (nt(19)));
		q(nt(28), (nt(21)));
		q(nt(28), (nt(26)));
		q(nt(29), (nt(18)+nt(21)));
		q(nt(29), (nt(19)));
		q(nt(29), (nt(20)));
		q(nt(29), (nt(26)));
		q(nt(31), (nt(6)));
		q(nt(32), (nt(31)+nt(32)));
		q(nt(32), (t(0)));
		q(nt(30), (nt(5)+nt(32)));
		q(nt(34), (nt(3)));
		q(nt(34), (nt(3)+nt(34)));
		q(nt(33), (nt(34)));
		q(nt(35), (nt(30)));
		q(nt(36), (t(10)+nt(30)));
		q(nt(37), (nt(33)));
		q(nt(38), (nt(19)+nt(17)+nt(19)));
		q(nt(38), (nt(19)+nt(27)+nt(19)));
		q(nt(38), (nt(39)));
		q(nt(38), (nt(40)));
		q(nt(40), (nt(19)+nt(19)));
		q(nt(39), (nt(19)+nt(18)+nt(8)+nt(19)));
		q(nt(42), (nt(20)+nt(28)));
		q(nt(42), (nt(20)+nt(28)+nt(42)));
		q(nt(41), (nt(42)+nt(20)));
		q(nt(41), (nt(43)));
		q(nt(43), (nt(20)+nt(20)));
		q(nt(45), (nt(21)+nt(29)));
		q(nt(45), (nt(21)+nt(29)+nt(45)));
		q(nt(44), (nt(45)+nt(21)));
		q(nt(44), (nt(46)));
		q(nt(46), (nt(21)+nt(21)));
		q(nt(47), (nt(48)));
		q(nt(47), (nt(49)));
		q(nt(48), (t(11)+nt(13)+nt(49)));
		q(nt(49), (nt(50)));
		q(nt(49), (nt(50)+nt(51)));
		q(nt(51), (nt(13)+t(12)+nt(13)+nt(52)+nt(13)+t(13)));
		q(nt(51), (nt(13)+t(12)+nt(13)+t(13)));
		q(nt(52), (nt(50)+nt(51)));
		q(nt(52), (nt(50)+nt(51)+nt(13)+nt(54)));
		q(nt(52), (nt(53)));
		q(nt(52), (nt(53)+nt(12)+nt(54)));
		q(nt(54), (nt(51)));
		q(nt(54), (nt(53)));
		q(nt(54), (nt(53)+nt(12)+nt(54)));
		q(nt(54), (nt(53)+nt(51)));
		q(nt(53), (nt(35)));
		q(nt(53), (nt(36)));
		q(nt(53), (nt(37)));
		q(nt(53), (nt(38)));
		q(nt(53), (nt(41)));
		q(nt(53), (nt(55)));
		q(nt(50), (nt(35)));
		q(nt(56), (nt(57)));
		q(nt(56), (nt(58)+nt(13)+nt(57)));
		q(nt(58), (nt(59)));
		q(nt(58), (nt(59)+nt(13)+nt(58)));
		q(nt(59), (nt(60)));
		q(nt(59), (nt(61)));
		q(nt(60), (t(14)+t(15)+t(16)+t(15)+t(17)));
		q(nt(61), (t(18)+t(19)+t(14)+t(20)+t(15)+t(21)));
		q(nt(57), (nt(62)));
		q(nt(57), (nt(62)+nt(51)));
		q(nt(62), (t(22)+t(17)+t(23)+t(24)+t(16)+t(25)));
		q(nt(62), (t(22)+t(17)+t(23)+t(16)+t(19)+t(21)));
		q(nt(62), (t(22)+t(17)+t(23)+t(19)+t(14)));
		q(nt(62), (t(22)+t(17)+t(23)+t(5)+t(19)+t(14)));
		q(nt(62), (t(26)+t(19)+t(6)+t(16)+t(21)));
		q(nt(62), (t(15)+t(14)+t(14)+t(19)+t(14)));
		q(nt(62), (t(18)+t(24)+t(27)+t(28)+t(15)));
		q(nt(62), (t(18)+t(19)+t(14)+t(20)+t(15)+t(21)));
		q(nt(62), (t(29)+t(24)+t(27)+t(21)));
		q(nt(62), (t(30)+t(28)+t(23)+t(15)+t(31)+t(24)+t(27)));
		q(nt(62), (t(27)+t(15)+t(32)));
		q(nt(62), (t(33)+t(14)+t(34)+t(16)+t(21)));
		q(nt(62), (t(33)+t(14)+t(34)+t(16)+t(21)+t(23)+t(25)+t(15)+t(27)+t(34)+t(35)));
		q(nt(62), (t(33)+t(14)+t(34)+t(16)+t(21)+t(23)+t(21)+t(19)));
		q(nt(62), (t(33)+t(14)+t(34)+t(16)+t(21)+t(23)+t(21)+t(19)+t(23)+t(25)+t(15)+t(27)+t(34)+t(35)));
		q(nt(62), (t(33)+t(14)+t(34)+t(16)+t(21)+t(27)+t(16)));
		q(nt(62), (t(33)+t(14)+t(34)+t(16)+t(21)+t(27)+t(16)+t(23)+t(25)+t(15)+t(27)+t(34)+t(35)));
		q(nt(62), (t(33)+t(14)+t(34)+t(16)+t(21)+t(27)+t(16)+t(23)+t(21)+t(19)));
		q(nt(62), (t(33)+t(14)+t(34)+t(16)+t(21)+t(27)+t(16)+t(23)+t(21)+t(19)+t(23)+t(25)+t(15)+t(27)+t(34)+t(35)));
		q(nt(62), (t(33)+t(17)+t(23)+t(24)+t(25)+t(25)));
		q(nt(62), (t(33)+t(17)+t(23)+t(35)+t(6)+t(27)+t(21)));
		q(nt(62), (t(14)+t(16)+t(25)));
		q(nt(55), (t(24)+t(27)+t(16)+t(6)+t(35)));
		q(nt(55), (t(24)+t(27)+t(33)+t(29)+t(24)));
		q(nt(55), (t(22)+t(27)+t(24)+t(16)+t(36)));
		q(nt(55), (t(26)+t(16)+t(21)+t(14)+t(27)));
		q(nt(55), (t(25)+t(34)+t(20)+t(34)+t(21)));
		q(nt(55), (t(15)+t(19)+t(18)));
		q(nt(55), (t(20)+t(14)+t(24)+t(33)+t(29)));
		q(nt(55), (t(27)+t(19)+t(17)+t(15)+t(14)));
		q(nt(55), (t(33)+t(14)+t(34)+t(16)+t(21)+t(24)+t(22)+t(27)+t(15)));
		q(nt(55), (t(33)+t(6)+t(16)+t(26)+t(21)));
		q(nt(55), (t(28)+t(33)+t(24)+t(26)+t(15)));
		q(nt(55), (t(6)+t(33)+t(33)+t(15)+t(14)));
		q(nt(55), (t(5)+t(25)+t(34)+t(20)+t(34)+t(21)));
		q(nt(63), (nt(64)));
		q(nt(63), (nt(65)));
		q(nt(64), (nt(53)+nt(13)+nt(66)+nt(13)+nt(53)));
		q(nt(65), (nt(53)+nt(13)+nt(67)+nt(13)+nt(53)+nt(13)+nt(66)+nt(13)+nt(53)));
		q(nt(65), (nt(53)+nt(13)+nt(67)+nt(13)+nt(53)+nt(13)+nt(66)+nt(13)+nt(53)+nt(13)+nt(53)));
		q(nt(66), (t(37)+t(38)));
		q(nt(66), (t(39)));
		q(nt(66), (t(39)+t(38)));
		q(nt(66), (t(38)));
		q(nt(66), (t(38)+t(38)));
		q(nt(66), (t(40)));
		q(nt(66), (t(40)+t(38)));
		q(nt(67), (t(41)));
		q(nt(67), (t(42)));
		q(nt(67), (t(43)));
		q(nt(67), (t(44)));
		q(nt(67), (t(39)+t(39)));
		q(nt(67), (t(40)+t(40)));
		q(nt(67), (t(45)));
		q(nt(67), (t(46)));
		q(nt(68), (nt(69)+nt(13)+t(47)+t(44)+nt(13)+nt(69)+nt(13)+t(48)));
		q(nt(70), (nt(71)+nt(13)+t(48)));
		q(nt(72), (nt(13)+t(49)+nt(13)+nt(71)));
		q(nt(73), (nt(72)+nt(73)));
		q(nt(73), (t(0)));
		q(nt(69), (nt(71)+nt(73)));
		q(nt(71), (nt(47)));
		q(nt(71), (nt(56)));
		q(nt(71), (nt(63)));
		q(nt(74), (t(50)+nt(75)+nt(13)+t(51)));
		q(nt(76), (t(37)+nt(13)+nt(47)+nt(13)+t(48)));
		q(nt(76), (t(37)+t(37)+nt(13)+nt(47)+nt(13)+t(48)));
		q(nt(77), (nt(49)+nt(13)+t(47)+t(38)+nt(13)+nt(69)+nt(13)+t(48)));
		q(nt(80), (nt(13)+nt(79)));
		q(nt(81), (nt(80)));
		q(nt(81), (nt(80)+nt(81)));
		q(nt(78), (nt(50)+nt(13)+t(38)+t(40)+nt(81)+nt(13)+t(48)));
		q(nt(79), (nt(30)));
		q(nt(79), (nt(38)));
		q(nt(79), (nt(41)));
		q(nt(79), (t(41)));
		q(nt(79), (t(12)));
		q(nt(79), (t(13)));
		q(nt(79), (t(42)));
		q(nt(79), (t(43)));
		q(nt(79), (t(52)));
		q(nt(79), (t(53)));
		q(nt(79), (t(50)));
		q(nt(79), (t(46)));
		q(nt(79), (t(51)));
		q(nt(79), (t(11)));
		q(nt(82), (nt(83)));
		q(nt(82), (nt(84)));
		q(nt(82), (nt(85)));
		q(nt(82), (nt(86)));
		q(nt(82), (nt(87)));
		q(nt(83), (t(54)+t(28)+t(21)+t(14)+t(34)+t(16)+t(20)+nt(12)+nt(88)+nt(13)+t(48)));
		q(nt(84), (t(54)+t(28)+t(21)+t(25)+t(19)+t(6)+t(21)+nt(12)+nt(49)+nt(13)+t(48)));
		q(nt(85), (t(54)+t(21)+t(14)+t(24)+t(26)+t(15)+nt(12)+nt(50)+nt(13)+t(48)));
		q(nt(86), (t(54)+t(34)+t(16)+t(21)+t(15)+t(14)+t(16)+t(24)+t(27)+nt(12)+nt(49)+nt(13)+t(48)));
		q(nt(87), (t(54)+t(22)+t(17)+t(25)+nt(13)+t(48)));
		q(nt(88), (nt(50)+nt(13)+nt(41)));
		q(nt(88), (nt(50)+nt(13)+nt(49)));
		q(nt(88), (nt(50)+nt(13)+nt(89)));
		q(nt(88), (nt(50)+nt(13)+nt(90)));
		q(nt(88), (nt(50)+nt(13)+nt(91)));
		q(nt(93), (t(39)+nt(92)));
		q(nt(93), (t(39)+nt(92)+nt(93)));
		q(nt(89), (nt(93)+t(40)));
		q(nt(90), (t(55)+nt(33)));
		q(nt(91), (t(39)+t(55)+nt(33)+t(40)));
		q(nt(94), (nt(95)));
		q(nt(94), (nt(96)));
		q(nt(95), (t(33)+t(14)+t(15)+t(25)+t(21)+t(56)+t(33)+t(15)+nt(12)+nt(50)+nt(13)+nt(97)+nt(13)+t(48)));
		q(nt(99), (nt(13)+t(49)+nt(13)+nt(98)+nt(13)+nt(36)));
		q(nt(100), (nt(99)+nt(100)));
		q(nt(100), (t(0)));
		q(nt(97), (t(12)+nt(13)+t(13)+nt(100)+nt(13)+t(13)));
		q(nt(97), (t(12)+nt(13)+t(13)+t(12)+nt(13)+nt(98)+nt(13)+nt(36)));
		q(nt(103), (nt(13)+nt(102)));
		q(nt(104), (nt(103)+nt(104)));
		q(nt(104), (t(0)));
		q(nt(96), (t(28)+t(21)+t(14)+t(6)+t(26)+t(21)+nt(13)+nt(101)+nt(13)+t(50)+nt(13)+nt(102)+nt(104)+nt(13)+t(51)));
		q(nt(101), (nt(50)));
		q(nt(105), (nt(50)));
		q(nt(106), (nt(13)+t(49)+nt(13)+nt(36)));
		q(nt(107), (nt(106)+nt(107)));
		q(nt(107), (t(0)));
		q(nt(102), (nt(98)+nt(13)+nt(36)+nt(107)+nt(13)+t(48)));
		q(nt(98), (nt(105)));
		q(nt(98), (nt(108)));
		q(nt(108), (nt(109)));
		q(nt(108), (nt(110)));
		q(nt(109), (nt(111)));
		q(nt(109), (nt(112)));
		q(nt(109), (nt(113)));
		q(nt(111), (t(34)+t(16)+t(21)));
		q(nt(112), (t(26)+t(29)+t(24)+t(14)));
		q(nt(113), (t(28)+t(56)+t(35)));
		q(nt(110), (t(34)+t(16)+t(21)+t(47)+nt(13)+nt(114)));
		q(nt(114), (nt(33)));
		q(nt(118), (nt(13)+nt(117)));
		q(nt(119), (nt(118)+nt(119)));
		q(nt(119), (t(0)));
		q(nt(115), (t(52)+nt(116)+nt(119)+nt(13)+t(53)));
		q(nt(116), (nt(120)));
		q(nt(116), (nt(121)));
		q(nt(120), (nt(122)+t(11)+t(47)));
		q(nt(121), (nt(122)+t(47)));
		q(nt(122), (nt(50)));
		q(nt(117), (nt(68)));
		q(nt(117), (nt(70)));
		q(nt(117), (nt(115)));
		q(nt(117), (nt(123)));
		q(nt(123), (nt(69)+nt(13)+t(47)+t(44)+nt(13)+nt(124)+nt(13)+t(48)));
		q(nt(127), (nt(13)+nt(126)+nt(13)+nt(125)));
		q(nt(128), (nt(127)+nt(128)));
		q(nt(128), (t(0)));
		q(nt(124), (nt(125)+nt(128)));
		q(nt(131), (nt(13)+nt(130)+nt(13)+nt(129)));
		q(nt(132), (nt(131)+nt(132)));
		q(nt(132), (t(0)));
		q(nt(125), (nt(129)+nt(132)));
		q(nt(126), (nt(133)));
		q(nt(126), (nt(134)));
		q(nt(130), (nt(135)));
		q(nt(130), (nt(136)));
		q(nt(135), (t(41)+t(41)));
		q(nt(136), (t(46)+t(46)));
		q(nt(133), (t(44)+t(40)));
		q(nt(134), (t(39)+t(44)+t(40)));
		q(nt(129), (nt(49)));
		q(nt(129), (nt(63)));
		q(nt(129), (nt(137)));
		q(nt(129), (nt(138)));
		q(nt(129), (nt(139)));
		q(nt(137), (t(11)+nt(129)));
		q(nt(138), (t(50)+nt(13)+nt(124)+nt(13)+t(51)));
		q(nt(139), (nt(140)+nt(13)+nt(141)));
		q(nt(139), (nt(140)+nt(13)+nt(141)+nt(13)+nt(124)));
		q(nt(140), (t(15)+t(5)+t(34)+t(28)+t(21)+t(28)));
		q(nt(140), (t(18)+t(19)+t(14)+t(24)+t(27)+t(27)));
		q(nt(140), (t(6)+t(16)+t(34)+t(32)+t(6)+t(15)));
		q(nt(141), (nt(36)));
		q(nt(141), (nt(50)));
		q(nt(142), (nt(143)));
		q(nt(142), (nt(144)));
		q(nt(142), (nt(145)));
		q(nt(144), (t(34)+t(18)+nt(13)+nt(146)+nt(13)+t(21)+t(29)+t(15)+t(16)+nt(13)+nt(147)));
		q(nt(143), (nt(144)+nt(13)+t(15)+t(27)+t(28)+t(15)+nt(13)+nt(147)));
		q(nt(145), (t(17)+t(29)+t(34)+t(27)+t(15)+nt(13)+nt(146)+nt(13)+t(25)+t(19)+nt(13)+nt(147)));
		q(nt(146), (nt(124)));
		q(nt(147), (nt(75)));
		q(nt(147), (nt(148)));
		q(nt(147), (nt(149)));
		q(nt(149), (nt(150)));
		q(nt(149), (nt(151)));
		q(nt(149), (nt(152)));
		q(nt(150), (nt(69)+nt(13)+t(47)+t(44)+nt(13)+nt(69)));
		q(nt(151), (nt(71)));
		q(nt(152), (nt(69)+nt(13)+t(47)+t(44)+nt(13)+nt(124)));
		q(nt(148), (nt(68)));
		q(nt(148), (nt(70)));
		q(nt(148), (nt(74)));
		q(nt(148), (nt(76)));
		q(nt(148), (nt(77)));
		q(nt(148), (nt(78)));
		q(nt(148), (nt(82)));
		q(nt(148), (nt(94)));
		q(nt(148), (nt(115)));
		q(nt(148), (nt(123)));
		q(nt(148), (nt(142)));
		q(nt(154), (nt(13)+nt(148)));
		q(nt(155), (nt(154)+nt(155)));
		q(nt(155), (t(0)));
		q(nt(153), (nt(155)+nt(13)));
		q(nt(156), (nt(153)));
		return q;
	}
};
